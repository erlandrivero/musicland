generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // AI Music Studio specific fields
  credits       Int       @default(10)
  totalCredits  Int       @default(10)
  subscription  String?   // 'free', 'creator', 'team'

  accounts Account[]
  sessions Session[]
  projects Project[]
  tracks   Track[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

// AI Music Studio specific models
model Project {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String?
  userId      String   @db.ObjectId
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user   User    @relation(fields: [userId], references: [id])
  tracks Track[]
}

model Track {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String?
  audioUrl      String?
  videoUrl      String?
  genre         String?
  tags          String?  // Comma-separated tags
  duration      Int?     // in seconds
  status        String   @default("pending") // 'pending', 'processing', 'completed', 'failed'
  userId        String   @db.ObjectId
  projectId     String?  @db.ObjectId
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Generation parameters
  prompt        String?
  style         String?
  isCustom      Boolean  @default(false)
  model         String?  // 'suno', 'riffusion', 'nuro'

  // User interaction tracking
  isFavorite    Boolean @default(false)
  playCount     Int     @default(0)
  downloadCount Int     @default(0)

  user    User     @relation(fields: [userId], references: [id])
  project Project? @relation(fields: [projectId], references: [id])
}
